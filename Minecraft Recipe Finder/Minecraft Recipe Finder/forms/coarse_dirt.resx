<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QRDMk590/weglXXKTzPfbQAAAABJRU5ErkJggg==
</value>
  </data>
</root>